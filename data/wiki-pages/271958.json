{"pageid":271958,"pagename":"Pathfinding","title":"Pathfinding","displaytitle":"Pathfinding","revid":14202476,"properties":[{"name":"smw-semanticdata-status","value":""},{"name":"description","value":"Pathfinding is the process of calculating which path of game squares (after this point referred to as 'tile') a player or NPC should move to get to its desired destination. This process happens whenever a player or NPC attempts to walk, run, or interact with a different player, different NPC, or an object in the world."}],"content":"<div class=\"mw-parser-output\"><p>Pathfinding is the process of calculating which path of <a href=\"/w/Game_square\" title=\"Game square\">game squares</a> (after this point referred to as 'tile') a <a href=\"/w/Player\" class=\"mw-redirect\" title=\"Player\">player</a> or <a href=\"/w/NPC\" class=\"mw-redirect\" title=\"NPC\">NPC</a> should move to get to its desired destination. This process happens whenever a player or NPC attempts to walk, run, or interact with a different player, different NPC, or an object in the world.\n</p>\n<div id=\"toc\" class=\"toc\" role=\"navigation\" aria-labelledby=\"mw-toc-heading\"><input type=\"checkbox\" role=\"button\" id=\"toctogglecheckbox\" class=\"toctogglecheckbox\" style=\"display:none\" /><div class=\"toctitle\" lang=\"en-GB\" dir=\"ltr\"><h2 id=\"mw-toc-heading\">Contents</h2><span class=\"toctogglespan\"><label class=\"toctogglelabel\" for=\"toctogglecheckbox\"></label></span></div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Blockage_and_valid_movement\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Blockage and valid movement</span></a></li>\n<li class=\"toclevel-1 tocsection-2\"><a href=\"#Calculation\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Calculation</span></a>\n<ul>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"#Determining_whether_pathing_will_be_attempted_and_the_requested_tiles\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">Determining whether pathing will be attempted and the requested tiles</span></a></li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Determining_the_target_tile\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">Determining the target tile</span></a></li>\n<li class=\"toclevel-2 tocsection-5\"><a href=\"#The_checkpoint_tiles_and_destination_tile\"><span class=\"tocnumber\">2.3</span> <span class=\"toctext\">The checkpoint tiles and destination tile</span></a></li>\n<li class=\"toclevel-2 tocsection-6\"><a href=\"#Path_recalculation\"><span class=\"tocnumber\">2.4</span> <span class=\"toctext\">Path recalculation</span></a></li>\n</ul>\n</li>\n<li class=\"toclevel-1 tocsection-7\"><a href=\"#Changes\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">Changes</span></a></li>\n</ul>\n</div>\n\n<h2><span class=\"mw-headline\" id=\"Blockage_and_valid_movement\">Blockage and valid movement</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=1&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: Blockage and valid movement\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=1\" title=\"Edit section: Blockage and valid movement\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>Whether a tile can be reached from another depends on the blockage properties of both the tiles. These blockages can occur in a number of combinations, but there are four main types.\n</p>\n<ul><li><b>Non-blocking tile:</b> A non-blocking, or free, tile is a tile that allows free movement from all directions, given that the adjacent tiles do not have any blockage that prevents this. It is a tile that does not have any objects, walls or pillars and can be stood on.</li></ul>\n<ul><li><b>Full-blocking tile:</b> A full-blocking tile is one that completely disallows movement from all directions. These tiles are usually occupied by an object and cannot be reached by normal means.</li></ul>\n<ul><li><b>Walls:</b> Walls occupy the borders of a tile. They block movement from the same direction as their location on the tile. Despite blocking movement, walls do not fully occupy the tile. It is possible to stand on a tile that has one or more walls on its borders.</li></ul>\n<ul><li><b>Pillars:</b> Pillars occupy the corners of a tile. They normally block movement from the diagonal direction just like walls do for cardinal directions. However, pillars are rarely added on all four adjacent tiles, often making it possible to walk through them in one or more directions, typically south-west to north-east and vice versa. It is possible to stand on a tile that has one or more pillars on its corners.</li></ul>\n<p><br />\n</p>\n<ul class=\"gallery mw-gallery-nolines\">\n\t\t<li class=\"gallerybox\" style=\"width: 205px\"><div style=\"width: 205px\">\n\t\t\t<div class=\"thumb\" style=\"width: 200px;\"><div style=\"margin:0px auto;\"><a href=\"/w/File:Pathing_blocking_full.gif\" class=\"image\"><img alt=\"\" src=\"/images/thumb/Pathing_blocking_full.gif/200px-Pathing_blocking_full.gif?dc862\" decoding=\"async\" width=\"200\" height=\"200\" srcset=\"/images/Pathing_blocking_full.gif?dc862 1.5x\" data-file-width=\"214\" data-file-height=\"214\" /></a></div></div>\n\t\t\t<div class=\"gallerytext\">\n<p>A full blocking tile\n</p>\n\t\t\t</div>\n\t\t</div></li>\n\t\t<li class=\"gallerybox\" style=\"width: 205px\"><div style=\"width: 205px\">\n\t\t\t<div class=\"thumb\" style=\"width: 200px;\"><div style=\"margin:0px auto;\"><a href=\"/w/File:Pathing_blocking_wall.gif\" class=\"image\"><img alt=\"\" src=\"/images/thumb/Pathing_blocking_wall.gif/200px-Pathing_blocking_wall.gif?bacb1\" decoding=\"async\" width=\"200\" height=\"200\" srcset=\"/images/Pathing_blocking_wall.gif?bacb1 1.5x\" data-file-width=\"213\" data-file-height=\"213\" /></a></div></div>\n\t\t\t<div class=\"gallerytext\">\n<p>A wall between two tiles\n</p>\n\t\t\t</div>\n\t\t</div></li>\n\t\t<li class=\"gallerybox\" style=\"width: 205px\"><div style=\"width: 205px\">\n\t\t\t<div class=\"thumb\" style=\"width: 200px;\"><div style=\"margin:0px auto;\"><a href=\"/w/File:Pathing_blocking_pillar.gif\" class=\"image\"><img alt=\"\" src=\"/images/thumb/Pathing_blocking_pillar.gif/200px-Pathing_blocking_pillar.gif?8f6a5\" decoding=\"async\" width=\"200\" height=\"200\" srcset=\"/images/Pathing_blocking_pillar.gif?8f6a5 1.5x\" data-file-width=\"263\" data-file-height=\"263\" /></a></div></div>\n\t\t\t<div class=\"gallerytext\">\n<p>A pillar between four tiles\n</p>\n\t\t\t</div>\n\t\t</div></li>\n</ul>\n<p><br />\n</p>\n<h2><span class=\"mw-headline\" id=\"Calculation\">Calculation</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=2&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: Calculation\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=2\" title=\"Edit section: Calculation\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<p>The pathfinding algorithm is determined largely by three steps. First, it's determined whether the requested location based on the player's click is a valid candidate for pathing and the requested tiles are selected. Second, a nuanced algorithm is used to determine the target tile and the possible paths. Third, the ultimate destination tile is chosen.\n</p><p>The second step to find the target tile roughly operates according to the following principles:\n</p>\n<ul><li>Paths must never leave the 128x128 tile area centred at the player's starting location,</li>\n<li>The paths with least total tiles traveled are prioritized, and</li>\n<li>Paths will prioritize lines in the cardinal directions and generally long, straight lines.</li></ul>\n<h3><span class=\"mw-headline\" id=\"Determining_whether_pathing_will_be_attempted_and_the_requested_tiles\">Determining whether pathing will be attempted and the requested tiles</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=3&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: Determining whether pathing will be attempted and the requested tiles\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=3\" title=\"Edit section: Determining whether pathing will be attempted and the requested tiles\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>In order to start pathfinding towards a destination, the destination must be considered reachable. Being reachable may sound straightforward, but a condition has to be met:\n</p>\n<ul><li>the south-west tile of an object destination must be within a 101x101 tile area around the starting location.</li></ul>\n<p>When clicking on a tile, the requested tile will be the tile that was clicked on. When clicking on an npc, object, or player, the requested tiles will be all tiles within melee range of the npc, object, or player.\n</p>\n<h3><span class=\"mw-headline\" id=\"Determining_the_target_tile\">Determining the target tile</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=4&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: Determining the target tile\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=4\" title=\"Edit section: Determining the target tile\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>Pathfinding itself is executed via an algorithm called <a href=\"https://en.wikipedia.org/wiki/Breadth-first_search\" class=\"extiw\" title=\"wikipedia:Breadth-first search\"><span title=\"&quot;Breadth-first search&quot; on English Wikipedia\">Breadth-first search</span></a> which prioritizes the shortest path that arrives to the requested tiles. \nIt is important to note that the pathfinding process will try to calculate a path to a requested tile; however, this isn't always possible, so the final target tile may not always be among the requested tiles.\n</p><p>Beginning at the starting tile, neighboring tiles are iteratively checked in the following order to determine which way to continue:\n</p>\n<ol><li>West</li>\n<li>East</li>\n<li>South</li>\n<li>North</li>\n<li>South-west</li>\n<li>South-east</li>\n<li>North-west</li>\n<li>North-east</li></ol>\n<div class=\"thumb tright\"><div class=\"thumbinner\" style=\"width:202px;\"><a href=\"/w/File:Pathfinding_calculations_visualised.gif\" class=\"image\"><img alt=\"\" src=\"/images/thumb/Pathfinding_calculations_visualised.gif/200px-Pathfinding_calculations_visualised.gif?74407\" decoding=\"async\" width=\"200\" height=\"200\" class=\"thumbimage\" srcset=\"/images/thumb/Pathfinding_calculations_visualised.gif/300px-Pathfinding_calculations_visualised.gif?74407 1.5x, /images/Pathfinding_calculations_visualised.gif?74407 2x\" data-file-width=\"400\" data-file-height=\"400\" /></a>  <div class=\"thumbcaption\"><div class=\"magnify\"><a href=\"/w/File:Pathfinding_calculations_visualised.gif\" class=\"internal\" title=\"Enlarge\"></a></div>The Breadth-First Search process and pathfinding calculations visualized. The numbers represent the amount of steps required to reach each tile.</div></div></div>\n<p>Each time a new tile is seen by the algorithm, the path distance from the starting location is stored (as one higher than the previous tile) and the previous tile is (indirectly) stored. \nThis process with the path distances included is visualized in the figure to the right. Instead of checking all neighboring tiles, there are further constraints that:\n</p>\n<ul><li>a considered tile needs to be within a 128x128 tile grid with the player's starting location at the north-east corner of the centre and</li>\n<li>obstructions can block some tiles from considered as neighbors of other tiles.</li></ul>\n<p>The breadth-first search algorithm terminates when all reachable tiles within the 128x128 tile grid are considered or a requested tile is discovered.\n</p><p>In the case that the algorithm discovered a requested tile, set that requested tile as the target tile. Otherwise, in the case that there is not a path within the 128x128 tile grid to a requested tile, a second search is started. All tiles are considered within a 21x21 grid which is centred at the south-west tile of the clicked npc, object, player or the clicked tile. The tiles are considered in order with western priority then southern priority. The target tile is set as the first tile found for which there exists a previously found path which \n</p>\n<ul><li>has path length less than 100,</li>\n<li>has the shortest path distance, and</li>\n<li>has target tile as close as possible in Euclidean distance to the nearest requested tile.</li></ul>\n<p>In case that the no such tile was found, store no target tile.\n</p>\n<h3><span class=\"mw-headline\" id=\"The_checkpoint_tiles_and_destination_tile\">The checkpoint tiles and destination tile</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=5&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: The checkpoint tiles and destination tile\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=5\" title=\"Edit section: The checkpoint tiles and destination tile\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>The target tile previously located is not always the destination tile at which the player will arrive when finishing pathing. Instead, the calculated path is post-processed by extracting only the first 25 corners of the path, called \"checkpoint tiles\". The last checkpoint tile is intended to be the ultimate destination of the pathing. As an example, if more than 25 checkpoint tiles would be required to reach the target tile, the destination tile is set at the 25th checkpoint tile of the path to the target tile. This can cause the path to appear to \"stop early\".\n</p><p>While pathing to each checkpoint tile, the player uses \"follow mode\" pathing identical to the pathing of NPCs. This pathing mode naively paths diagonally to the end tile and then straight if there's no diagonals left. In standard situations, the path from one checkpoint tile to the next is a straight line so the pathing appears straightforward. However, sometimes a player will be moved by external factors (such as firemaking) or the obstruction landscape can change (such as by opening a gate).\n</p>\n<h3><span class=\"mw-headline\" id=\"Path_recalculation\">Path recalculation</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=6&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: Path recalculation\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=6\" title=\"Edit section: Path recalculation\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h3>\n<p>If no target tile was found, pathfinding will have been permanently cancelled if the target was an object, tile, or dropped item. However, if the clicked entity is an NPC or player, a new pathfinding attempt will be started every tick, until a target tile can be found that meets all the aforementioned requirements.\n</p><p>Additionally, when there is only one checkpoint tile left in the path and the target has moved, the path is recalculated every tick starting from the current tile. Despite this, since players can traverse two checkpoint tiles in one tick, players may run past their target if it has moved towards them.\n</p>\n<h2><span class=\"mw-headline\" id=\"Changes\">Changes</span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">[</span><a href=\"/w/Pathfinding?section=7&amp;veaction=edit\" class=\"mw-editsection-visualeditor\" title=\"Edit section: Changes\">edit</a><span class=\"mw-editsection-divider\"> | </span><a href=\"/w/Pathfinding?action=edit&amp;section=7\" title=\"Edit section: Changes\">edit source</a><span class=\"mw-editsection-bracket\">]</span></span></h2>\n<table class=\"wikitable mw-collapsible sortable\" style=\"max-width:800px\">\n<tbody><tr>\n<th>Date\n</th>\n<th class=\"unsortable\">Changes\n</th></tr>\n<tr>\n<td data-sort-value=\"17 December 2013\"><a href=\"/w/17_December\" title=\"17 December\">17&#160;December</a>&#160;<a href=\"/w/2013\" title=\"2013\">2013</a><br />(<a href=\"/w/Update:Christmas_Holiday_Event\" title=\"Update:Christmas Holiday Event\">update</a>)\n</td>\n<td>\n<p>When you are following a player in walk-mode, you should no longer find that you randomly lag behind them by an extra tile, forcing you to consume your run energy to catch up.\n</p>\n</td></tr></tbody></table>\n<!-- \nNewPP limit report\nParsed by mediawiki‐7bfb498f95‐lgkzc\nCached time: 20220517154816\nCache expiry: 86400\nReduced expiry: false\nComplications: []\n[SMW] In‐text annotation parser time: 0 seconds\nCPU time usage: 0.029 seconds\nReal time usage: 0.040 seconds\nPreprocessor visited node count: 97/1000000\nPost‐expand include size: 672/2097152 bytes\nTemplate argument size: 436/2097152 bytes\nHighest expansion depth: 6/100\nExpensive parser function count: 0/100\nUnstrip recursion depth: 0/20\nUnstrip post‐expand size: 1765/5000000 bytes\n-->\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%    9.962      1 -total\n 35.84%    3.570      1 Template:Subject_changes\n 34.83%    3.470      1 Template:WP\n 13.63%    1.358      1 Template:UD\n 13.37%    1.332      1 Template:Subject_changes_footer\n 12.44%    1.239      1 Template:Subject_changes_header\n-->\n\n<!-- Saved in parser cache with key en_osrswiki:pcache:idhash:271958-0!canonical and timestamp 20220517154816 and revision id 14202476. Serialized with PHP.\n -->\n</div>","rawContent":"Pathfinding is the process of calculating which path of [[game square]]s (after this point referred to as 'tile') a [[player]] or [[NPC]] should move to get to its desired destination. This process happens whenever a player or NPC attempts to walk, run, or interact with a different player, different NPC, or an object in the world.\n\n==Blockage and valid movement==\nWhether a tile can be reached from another depends on the blockage properties of both the tiles. These blockages can occur in a number of combinations, but there are four main types.\n\n* '''Non-blocking tile:''' A non-blocking, or free, tile is a tile that allows free movement from all directions, given that the adjacent tiles do not have any blockage that prevents this. It is a tile that does not have any objects, walls or pillars and can be stood on.\n\n* '''Full-blocking tile:''' A full-blocking tile is one that completely disallows movement from all directions. These tiles are usually occupied by an object and cannot be reached by normal means.\n\n* '''Walls:''' Walls occupy the borders of a tile. They block movement from the same direction as their location on the tile. Despite blocking movement, walls do not fully occupy the tile. It is possible to stand on a tile that has one or more walls on its borders.\n\n* '''Pillars:''' Pillars occupy the corners of a tile. They normally block movement from the diagonal direction just like walls do for cardinal directions. However, pillars are rarely added on all four adjacent tiles, often making it possible to walk through them in one or more directions, typically south-west to north-east and vice versa. It is possible to stand on a tile that has one or more pillars on its corners.\n\n\n<gallery widths=\"200\" heights=\"200\" mode=\"nolines\">\nFile:Pathing blocking full.gif|A full blocking tile\nFile:Pathing blocking wall.gif|A wall between two tiles\nFile:Pathing blocking pillar.gif|A pillar between four tiles\n</gallery>\n\n\n==Calculation==\nThe pathfinding algorithm is determined largely by three steps. First, it's determined whether the requested location based on the player's click is a valid candidate for pathing and the requested tiles are selected. Second, a nuanced algorithm is used to determine the target tile and the possible paths. Third, the ultimate destination tile is chosen.\n\nThe second step to find the target tile roughly operates according to the following principles:\n* Paths must never leave the 128x128 tile area centred at the player's starting location,\n* The paths with least total tiles traveled are prioritized, and\n* Paths will prioritize lines in the cardinal directions and generally long, straight lines.\n\n===Determining whether pathing will be attempted and the requested tiles===\nIn order to start pathfinding towards a destination, the destination must be considered reachable. Being reachable may sound straightforward, but a condition has to be met:\n* the south-west tile of an object destination must be within a 101x101 tile area around the starting location.\n\nWhen clicking on a tile, the requested tile will be the tile that was clicked on. When clicking on an npc, object, or player, the requested tiles will be all tiles within melee range of the npc, object, or player.\n\n===Determining the target tile===\nPathfinding itself is executed via an algorithm called {{WP|Breadth-first search}} which prioritizes the shortest path that arrives to the requested tiles. \nIt is important to note that the pathfinding process will try to calculate a path to a requested tile; however, this isn't always possible, so the final target tile may not always be among the requested tiles.\n\nBeginning at the starting tile, neighboring tiles are iteratively checked in the following order to determine which way to continue:\n# West\n# East\n# South\n# North\n# South-west\n# South-east\n# North-west\n# North-east\n[[File:Pathfinding calculations visualised.gif|thumb|200x200px|The Breadth-First Search process and pathfinding calculations visualized. The numbers represent the amount of steps required to reach each tile.]]\nEach time a new tile is seen by the algorithm, the path distance from the starting location is stored (as one higher than the previous tile) and the previous tile is (indirectly) stored. \nThis process with the path distances included is visualized in the figure to the right. Instead of checking all neighboring tiles, there are further constraints that:\n* a considered tile needs to be within a 128x128 tile grid with the player's starting location at the north-east corner of the centre and\n* obstructions can block some tiles from considered as neighbors of other tiles.\nThe breadth-first search algorithm terminates when all reachable tiles within the 128x128 tile grid are considered or a requested tile is discovered.\n\nIn the case that the algorithm discovered a requested tile, set that requested tile as the target tile. Otherwise, in the case that there is not a path within the 128x128 tile grid to a requested tile, a second search is started. All tiles are considered within a 21x21 grid which is centred at the south-west tile of the clicked npc, object, player or the clicked tile. The tiles are considered in order with western priority then southern priority. The target tile is set as the first tile found for which there exists a previously found path which \n* has path length less than 100,\n* has the shortest path distance, and\n* has target tile as close as possible in Euclidean distance to the nearest requested tile.\nIn case that the no such tile was found, store no target tile.\n\n===The checkpoint tiles and destination tile===\nThe target tile previously located is not always the destination tile at which the player will arrive when finishing pathing. Instead, the calculated path is post-processed by extracting only the first 25 corners of the path, called \"checkpoint tiles\". The last checkpoint tile is intended to be the ultimate destination of the pathing. As an example, if more than 25 checkpoint tiles would be required to reach the target tile, the destination tile is set at the 25th checkpoint tile of the path to the target tile. This can cause the path to appear to \"stop early\".\n\nWhile pathing to each checkpoint tile, the player uses \"follow mode\" pathing identical to the pathing of NPCs. This pathing mode naively paths diagonally to the end tile and then straight if there's no diagonals left. In standard situations, the path from one checkpoint tile to the next is a straight line so the pathing appears straightforward. However, sometimes a player will be moved by external factors (such as firemaking) or the obstruction landscape can change (such as by opening a gate).\n\n===Path recalculation===\nIf no target tile was found, pathfinding will have been permanently cancelled if the target was an object, tile, or dropped item. However, if the clicked entity is an NPC or player, a new pathfinding attempt will be started every tick, until a target tile can be found that meets all the aforementioned requirements.\n\nAdditionally, when there is only one checkpoint tile left in the path and the target has moved, the path is recalculated every tick starting from the current tile. Despite this, since players can traverse two checkpoint tiles in one tick, players may run past their target if it has moved towards them.\n\n==Changes==\n{{Subject changes header}}\n{{Subject changes\n|date = 17 December 2013\n|update = Christmas Holiday Event\n|change = When you are following a player in walk-mode, you should no longer find that you randomly lag behind them by an extra tile, forcing you to consume your run energy to catch up.\n}}\n{{Subject changes footer}}\n\n[[Category:Mechanics]]"}